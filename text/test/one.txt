using DeenatemaModPack.ITMFunctions;
using System;
using System.Collections.Generic;
using System.Text;
using UnityEngine;

namespace DeenatemaModPack.ITM
{
    public class ITM_Plunger : Item
    {
        public float collisionCheckDistanceFromPlayer = 10;
        public float checkTime = 1;
        public AudioManager am;
        public override bool Use(PlayerManager pm)
        {
            GameObject collisionCheck = GameObject.CreatePrimitive(PrimitiveType.Cube);
            collisionCheck.name = "Plunger Item";
            BoxCollider bc = collisionCheck.GetComponent<BoxCollider>();
            bc.isTrigger = true;
            collisionCheck.transform.localScale = new Vector3(4.2f, 4, 4);
            MeshRenderer meshRenderer = collisionCheck.GetComponent<MeshRenderer>();
            Destroy(meshRenderer.sharedMaterial);
            if (!GlobalValues.SHOW_PLUNGER_COLLIDER)
            {
                Destroy(meshRenderer);
            }
            SpriteRenderer spriteRenderer = new GameObject("Sprite").AddComponent<SpriteRenderer>();
            spriteRenderer.material = BasePlugin.BilboardMaterial;
            spriteRenderer.transform.position = new Vector3(collisionCheck.transform.position.x, 2.7f, collisionCheck.transform.position.z);
            spriteRenderer.transform.localScale = Vector3.one * 2.5f;
            spriteRenderer.transform.SetParent(collisionCheck.transform, true);
            spriteRenderer.sprite = ModExtraAssets.Get<Sprite>("Plunger_OnUse");
            collisionCheck.transform.position = new Vector3(pm.transform.position.x, 0.5f, pm.transform.position.z) + (pm.transform.forward * collisionCheckDistanceFromPlayer);
            Plunger_CheckOnWhirlpool checker = collisionCheck.AddComponent<Plunger_CheckOnWhirlpool>();
            checker.StartChecking(checkTime, this);
            am = collisionCheck.AddComponent<AudioManager>();
            am.audioDevice = collisionCheck.AddComponent<AudioSource>();
            am.audioDevice.rolloffMode = AudioRolloffMode.Linear;
            am.audioDevice.spatialBlend = 1;
            am.PlaySingle(BasePlugin.Plunger_On);
            return true;
        }
    }
}